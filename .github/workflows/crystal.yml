name: Duo Crystal CI

on:
  push:
    branches: [master, main]
  pull_request:
    branches: [master, main]

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: crystallang/crystal:1.16.3

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install shards
        run: shards install --ignore-crystal-version

      - name: Check formatting
        run: crystal tool format --check ./src

      - name: Run tests
        run: crystal spec

      - name: Install h2spec
        run: |
          curl -L -o h2spec https://github.com/summerwind/h2spec/releases/download/v2.6.0/h2spec_linux_amd64
          chmod +x h2spec
          mv h2spec /usr/local/bin/

      - name: Generate SSL certificates
        run: |
          mkdir -p examples/ssl
          openssl req -x509 -newkey rsa:2048 -keyout examples/ssl/localhost-key.pem -out examples/ssl/localhost.pem -days 365 -nodes -subj '/CN=localhost'

      - name: Start test server
        run: |
          crystal build examples/test_server.cr -o test_server
          ./test_server > server.log 2>&1 &
          echo $! > server.pid
          sleep 10

      - name: Verify server is running
        run: |
          curl -k https://localhost:9876/health || exit 1

      - name: Run H2Spec compliance tests
        run: |
          h2spec -t -k -p 9876 -h localhost
        continue-on-error: false

      - name: Stop test server
        if: always()
        run: |
          if [ -f server.pid ]; then
            kill $(cat server.pid) || true
            rm server.pid
          fi

      - name: Show server logs
        if: always()
        run: |
          if [ -f server.log ]; then
            echo "=== Server Logs ==="
            cat server.log
          fi

  release:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main')
    permissions:
      contents: write
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Compute Release Version
        id: semver
        uses: paulhatch/semantic-version@v4.0.2
        with:
          tag_prefix: "v"
          major_pattern: "(MAJOR)"
          minor_pattern: "(MINOR)"
          format: "${major}.${minor}.${patch}"
          bump_each_commit: true

      - name: Bump Shard Version
        id: bump-shard
        uses: fjogeleit/yaml-update-action@master
        with:
          valueFile: shard.yml
          propertyPath: version
          value: ${{steps.semver.outputs.version}}
          branch: ${{ github.ref_name }}
          updateFile: true
          message: Set shard version ${{ steps.semver.outputs.version }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{steps.semver.outputs.version_tag}}
          release_name: Release v${{steps.semver.outputs.version}}
          draft: false
          prerelease: false
